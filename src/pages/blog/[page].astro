---
import { createClient } from 'microcms-js-sdk';
import type { GetStaticPaths } from 'astro';
import Layout from '../../../layouts/Layout.astro';

// microCMSクライアントを作成
const client = createClient({
  serviceDomain: import.meta.env.MICROCMS_SERVICE_DOMAIN,
  apiKey: import.meta.env.MICROCMS_API_KEY,
});

// ページごとのデータ取得設定
const perPage = 12; // 1ページあたりの記事数

// ページネーション用のパスとデータを生成
export const getStaticPaths = (async ({ paginate }) => {
  const response = await client.get({
    endpoint: 'blogs',
    queries: { limit: 1 }, // 記事数だけ取得
  });

  const totalCount = response.totalCount; // 記事総数
  const totalPages = Math.ceil(totalCount / perPage); // 総ページ数

  const paths = [];
  for (let i = 0; i < totalPages; i++) {
    const pageData = await client.get({
      endpoint: 'blogs',
      queries: {
        limit: perPage,
        offset: i * perPage,
      },
    });
    paths.push(
      ...paginate(pageData.contents, {
        pageSize: perPage,
        currentPage: i + 1,
      })
    );
  }

  return paths;
}) satisfies GetStaticPaths;

// Astro.propsからページデータを取得
const { page } = Astro.props;
---

<Layout>
  <div>
    <h1>記事一覧</h1>
    <ul>
      {page.data.map((post) => (
        <li key={post.id}>
          <article>
            <h2>
              <a href={`/blog/posts/${post.id}`}>{post.title}</a>
            </h2>
          </article>
        </li>
      ))}
    </ul>
    <nav>
      {page.url.prev && <a href={page.url.prev}>戻る</a>}
      {page.url.prev && page.url.next && <span class="mx-4">|</span>}
      {page.url.next && <a href={page.url.next}>進む</a>}
    </nav>
  </div>
</Layout>
